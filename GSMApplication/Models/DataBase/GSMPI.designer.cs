#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GSMApplication.Models.DataBase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GSMPI")]
	public partial class GSMPIDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertcaCommands(caCommands instance);
    partial void UpdatecaCommands(caCommands instance);
    partial void DeletecaCommands(caCommands instance);
    partial void InserttblLogs(tblLogs instance);
    partial void UpdatetblLogs(tblLogs instance);
    partial void DeletetblLogs(tblLogs instance);
    partial void InsertcaParameters(caParameters instance);
    partial void UpdatecaParameters(caParameters instance);
    partial void DeletecaParameters(caParameters instance);
    partial void InsertcaProviders(caProviders instance);
    partial void UpdatecaProviders(caProviders instance);
    partial void DeletecaProviders(caProviders instance);
    partial void InsertGMapNETcache(GMapNETcache instance);
    partial void UpdateGMapNETcache(GMapNETcache instance);
    partial void DeleteGMapNETcache(GMapNETcache instance);
    partial void InsertmaCells(maCells instance);
    partial void UpdatemaCells(maCells instance);
    partial void DeletemaCells(maCells instance);
    partial void InsertmaDecryptedTraffic(maDecryptedTraffic instance);
    partial void UpdatemaDecryptedTraffic(maDecryptedTraffic instance);
    partial void DeletemaDecryptedTraffic(maDecryptedTraffic instance);
    partial void InsertmaTMSICatcher(maTMSICatcher instance);
    partial void UpdatemaTMSICatcher(maTMSICatcher instance);
    partial void DeletemaTMSICatcher(maTMSICatcher instance);
    partial void InsertreCommandsParameters(reCommandsParameters instance);
    partial void UpdatereCommandsParameters(reCommandsParameters instance);
    partial void DeletereCommandsParameters(reCommandsParameters instance);
    partial void InserttaParameters(taParameters instance);
    partial void UpdatetaParameters(taParameters instance);
    partial void DeletetaParameters(taParameters instance);
    #endregion
		
		public GSMPIDataContext() : 
				base(global::GSMApplication.Properties.Settings.Default.GSMPIConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GSMPIDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GSMPIDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GSMPIDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GSMPIDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<caCommands> caCommands
		{
			get
			{
				return this.GetTable<caCommands>();
			}
		}
		
		public System.Data.Linq.Table<tblLogs> tblLogs
		{
			get
			{
				return this.GetTable<tblLogs>();
			}
		}
		
		public System.Data.Linq.Table<caParameters> caParameters
		{
			get
			{
				return this.GetTable<caParameters>();
			}
		}
		
		public System.Data.Linq.Table<caProviders> caProviders
		{
			get
			{
				return this.GetTable<caProviders>();
			}
		}
		
		public System.Data.Linq.Table<GMapNETcache> GMapNETcache
		{
			get
			{
				return this.GetTable<GMapNETcache>();
			}
		}
		
		public System.Data.Linq.Table<maCells> maCells
		{
			get
			{
				return this.GetTable<maCells>();
			}
		}
		
		public System.Data.Linq.Table<maDecryptedTraffic> maDecryptedTraffic
		{
			get
			{
				return this.GetTable<maDecryptedTraffic>();
			}
		}
		
		public System.Data.Linq.Table<maTMSICatcher> maTMSICatcher
		{
			get
			{
				return this.GetTable<maTMSICatcher>();
			}
		}
		
		public System.Data.Linq.Table<reCommandsParameters> reCommandsParameters
		{
			get
			{
				return this.GetTable<reCommandsParameters>();
			}
		}
		
		public System.Data.Linq.Table<taParameters> taParameters
		{
			get
			{
				return this.GetTable<taParameters>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SPNlogErrorsRegistredInInterval")]
		public ISingleResult<SPNlogErrorsRegistredInIntervalResult> SPNlogErrorsRegistredInInterval([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> minutes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(MAX)")] string exceptionMessage)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), minutes, exceptionMessage);
			return ((ISingleResult<SPNlogErrorsRegistredInIntervalResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.caCommands")]
	public partial class caCommands : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _command;
		
		private string _description;
		
		private System.DateTime _fIns;
		
		private System.Nullable<System.DateTime> _fAct;
		
		private EntitySet<reCommandsParameters> _reCommandsParameters;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncommandChanging(string value);
    partial void OncommandChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    partial void OnfActChanging(System.Nullable<System.DateTime> value);
    partial void OnfActChanged();
    #endregion
		
		public caCommands()
		{
			this._reCommandsParameters = new EntitySet<reCommandsParameters>(new Action<reCommandsParameters>(this.attach_reCommandsParameters), new Action<reCommandsParameters>(this.detach_reCommandsParameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_command", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string command
		{
			get
			{
				return this._command;
			}
			set
			{
				if ((this._command != value))
				{
					this.OncommandChanging(value);
					this.SendPropertyChanging();
					this._command = value;
					this.SendPropertyChanged("command");
					this.OncommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fAct", DbType="DateTime")]
		public System.Nullable<System.DateTime> fAct
		{
			get
			{
				return this._fAct;
			}
			set
			{
				if ((this._fAct != value))
				{
					this.OnfActChanging(value);
					this.SendPropertyChanging();
					this._fAct = value;
					this.SendPropertyChanged("fAct");
					this.OnfActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caCommands_reCommandsParameters", Storage="_reCommandsParameters", ThisKey="id", OtherKey="idCommand")]
		public EntitySet<reCommandsParameters> reCommandsParameters
		{
			get
			{
				return this._reCommandsParameters;
			}
			set
			{
				this._reCommandsParameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reCommandsParameters(reCommandsParameters entity)
		{
			this.SendPropertyChanging();
			entity.caCommands = this;
		}
		
		private void detach_reCommandsParameters(reCommandsParameters entity)
		{
			this.SendPropertyChanging();
			entity.caCommands = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLogs")]
	public partial class tblLogs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<System.DateTime> _EventDateTime;
		
		private string _EventLevel;
		
		private string _MachineName;
		
		private string _EventMessage;
		
		private string _Exception;
		
		private System.DateTime _fIns;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEventDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnEventDateTimeChanged();
    partial void OnEventLevelChanging(string value);
    partial void OnEventLevelChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnEventMessageChanging(string value);
    partial void OnEventMessageChanged();
    partial void OnExceptionChanging(string value);
    partial void OnExceptionChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    #endregion
		
		public tblLogs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> EventDateTime
		{
			get
			{
				return this._EventDateTime;
			}
			set
			{
				if ((this._EventDateTime != value))
				{
					this.OnEventDateTimeChanging(value);
					this.SendPropertyChanging();
					this._EventDateTime = value;
					this.SendPropertyChanged("EventDateTime");
					this.OnEventDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventLevel", DbType="VarChar(100)")]
		public string EventLevel
		{
			get
			{
				return this._EventLevel;
			}
			set
			{
				if ((this._EventLevel != value))
				{
					this.OnEventLevelChanging(value);
					this.SendPropertyChanging();
					this._EventLevel = value;
					this.SendPropertyChanged("EventLevel");
					this.OnEventLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="VarChar(100)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventMessage", DbType="VarChar(MAX)")]
		public string EventMessage
		{
			get
			{
				return this._EventMessage;
			}
			set
			{
				if ((this._EventMessage != value))
				{
					this.OnEventMessageChanging(value);
					this.SendPropertyChanging();
					this._EventMessage = value;
					this.SendPropertyChanged("EventMessage");
					this.OnEventMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exception", DbType="VarChar(MAX)")]
		public string Exception
		{
			get
			{
				return this._Exception;
			}
			set
			{
				if ((this._Exception != value))
				{
					this.OnExceptionChanging(value);
					this.SendPropertyChanging();
					this._Exception = value;
					this.SendPropertyChanged("Exception");
					this.OnExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.caParameters")]
	public partial class caParameters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _parameter;
		
		private string _description;
		
		private System.DateTime _fIns;
		
		private System.Nullable<System.DateTime> _fAct;
		
		private EntitySet<reCommandsParameters> _reCommandsParameters;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnparameterChanging(string value);
    partial void OnparameterChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    partial void OnfActChanging(System.Nullable<System.DateTime> value);
    partial void OnfActChanged();
    #endregion
		
		public caParameters()
		{
			this._reCommandsParameters = new EntitySet<reCommandsParameters>(new Action<reCommandsParameters>(this.attach_reCommandsParameters), new Action<reCommandsParameters>(this.detach_reCommandsParameters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parameter", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string parameter
		{
			get
			{
				return this._parameter;
			}
			set
			{
				if ((this._parameter != value))
				{
					this.OnparameterChanging(value);
					this.SendPropertyChanging();
					this._parameter = value;
					this.SendPropertyChanged("parameter");
					this.OnparameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fAct", DbType="DateTime")]
		public System.Nullable<System.DateTime> fAct
		{
			get
			{
				return this._fAct;
			}
			set
			{
				if ((this._fAct != value))
				{
					this.OnfActChanging(value);
					this.SendPropertyChanging();
					this._fAct = value;
					this.SendPropertyChanged("fAct");
					this.OnfActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caParameters_reCommandsParameters", Storage="_reCommandsParameters", ThisKey="id", OtherKey="idParameter")]
		public EntitySet<reCommandsParameters> reCommandsParameters
		{
			get
			{
				return this._reCommandsParameters;
			}
			set
			{
				this._reCommandsParameters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_reCommandsParameters(reCommandsParameters entity)
		{
			this.SendPropertyChanging();
			entity.caParameters = this;
		}
		
		private void detach_reCommandsParameters(reCommandsParameters entity)
		{
			this.SendPropertyChanging();
			entity.caParameters = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.caProviders")]
	public partial class caProviders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Provider;
		
		private System.DateTime _fIns;
		
		private System.Nullable<System.DateTime> _fAct;
		
		private EntitySet<maCells> _maCells;
		
		private EntitySet<maDecryptedTraffic> _maDecryptedTraffic;
		
		private EntitySet<maTMSICatcher> _maTMSICatcher;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnProviderChanging(string value);
    partial void OnProviderChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    partial void OnfActChanging(System.Nullable<System.DateTime> value);
    partial void OnfActChanged();
    #endregion
		
		public caProviders()
		{
			this._maCells = new EntitySet<maCells>(new Action<maCells>(this.attach_maCells), new Action<maCells>(this.detach_maCells));
			this._maDecryptedTraffic = new EntitySet<maDecryptedTraffic>(new Action<maDecryptedTraffic>(this.attach_maDecryptedTraffic), new Action<maDecryptedTraffic>(this.detach_maDecryptedTraffic));
			this._maTMSICatcher = new EntitySet<maTMSICatcher>(new Action<maTMSICatcher>(this.attach_maTMSICatcher), new Action<maTMSICatcher>(this.detach_maTMSICatcher));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fAct", DbType="DateTime")]
		public System.Nullable<System.DateTime> fAct
		{
			get
			{
				return this._fAct;
			}
			set
			{
				if ((this._fAct != value))
				{
					this.OnfActChanging(value);
					this.SendPropertyChanging();
					this._fAct = value;
					this.SendPropertyChanged("fAct");
					this.OnfActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caProviders_maCells", Storage="_maCells", ThisKey="id", OtherKey="Provider")]
		public EntitySet<maCells> maCells
		{
			get
			{
				return this._maCells;
			}
			set
			{
				this._maCells.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caProviders_maDecryptedTraffic", Storage="_maDecryptedTraffic", ThisKey="id", OtherKey="Provider")]
		public EntitySet<maDecryptedTraffic> maDecryptedTraffic
		{
			get
			{
				return this._maDecryptedTraffic;
			}
			set
			{
				this._maDecryptedTraffic.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caProviders_maTMSICatcher", Storage="_maTMSICatcher", ThisKey="id", OtherKey="Provider")]
		public EntitySet<maTMSICatcher> maTMSICatcher
		{
			get
			{
				return this._maTMSICatcher;
			}
			set
			{
				this._maTMSICatcher.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_maCells(maCells entity)
		{
			this.SendPropertyChanging();
			entity.caProviders = this;
		}
		
		private void detach_maCells(maCells entity)
		{
			this.SendPropertyChanging();
			entity.caProviders = null;
		}
		
		private void attach_maDecryptedTraffic(maDecryptedTraffic entity)
		{
			this.SendPropertyChanging();
			entity.caProviders = this;
		}
		
		private void detach_maDecryptedTraffic(maDecryptedTraffic entity)
		{
			this.SendPropertyChanging();
			entity.caProviders = null;
		}
		
		private void attach_maTMSICatcher(maTMSICatcher entity)
		{
			this.SendPropertyChanging();
			entity.caProviders = this;
		}
		
		private void detach_maTMSICatcher(maTMSICatcher entity)
		{
			this.SendPropertyChanging();
			entity.caProviders = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GMapNETcache")]
	public partial class GMapNETcache : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Type;
		
		private int _Zoom;
		
		private int _X;
		
		private int _Y;
		
		private System.Data.Linq.Binary _Tile;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnZoomChanging(int value);
    partial void OnZoomChanged();
    partial void OnXChanging(int value);
    partial void OnXChanged();
    partial void OnYChanging(int value);
    partial void OnYChanged();
    partial void OnTileChanging(System.Data.Linq.Binary value);
    partial void OnTileChanged();
    #endregion
		
		public GMapNETcache()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zoom", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Zoom
		{
			get
			{
				return this._Zoom;
			}
			set
			{
				if ((this._Zoom != value))
				{
					this.OnZoomChanging(value);
					this.SendPropertyChanging();
					this._Zoom = value;
					this.SendPropertyChanged("Zoom");
					this.OnZoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tile", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Tile
		{
			get
			{
				return this._Tile;
			}
			set
			{
				if ((this._Tile != value))
				{
					this.OnTileChanging(value);
					this.SendPropertyChanging();
					this._Tile = value;
					this.SendPropertyChanged("Tile");
					this.OnTileChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.maCells")]
	public partial class maCells : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _ARFCN;
		
		private string _CellId;
		
		private string _Band;
		
		private string _RxLevel;
		
		private string _LAC;
		
		private string _MCC;
		
		private string _MNC;
		
		private int _Provider;
		
		private string _Comment;
		
		private System.DateTime _fIns;
		
		private EntityRef<caProviders> _caProviders;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnARFCNChanging(string value);
    partial void OnARFCNChanged();
    partial void OnCellIdChanging(string value);
    partial void OnCellIdChanged();
    partial void OnBandChanging(string value);
    partial void OnBandChanged();
    partial void OnRxLevelChanging(string value);
    partial void OnRxLevelChanged();
    partial void OnLACChanging(string value);
    partial void OnLACChanged();
    partial void OnMCCChanging(string value);
    partial void OnMCCChanged();
    partial void OnMNCChanging(string value);
    partial void OnMNCChanged();
    partial void OnProviderChanging(int value);
    partial void OnProviderChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    #endregion
		
		public maCells()
		{
			this._caProviders = default(EntityRef<caProviders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARFCN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ARFCN
		{
			get
			{
				return this._ARFCN;
			}
			set
			{
				if ((this._ARFCN != value))
				{
					this.OnARFCNChanging(value);
					this.SendPropertyChanging();
					this._ARFCN = value;
					this.SendPropertyChanged("ARFCN");
					this.OnARFCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CellId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CellId
		{
			get
			{
				return this._CellId;
			}
			set
			{
				if ((this._CellId != value))
				{
					this.OnCellIdChanging(value);
					this.SendPropertyChanging();
					this._CellId = value;
					this.SendPropertyChanged("CellId");
					this.OnCellIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Band", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Band
		{
			get
			{
				return this._Band;
			}
			set
			{
				if ((this._Band != value))
				{
					this.OnBandChanging(value);
					this.SendPropertyChanging();
					this._Band = value;
					this.SendPropertyChanged("Band");
					this.OnBandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxLevel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RxLevel
		{
			get
			{
				return this._RxLevel;
			}
			set
			{
				if ((this._RxLevel != value))
				{
					this.OnRxLevelChanging(value);
					this.SendPropertyChanging();
					this._RxLevel = value;
					this.SendPropertyChanged("RxLevel");
					this.OnRxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LAC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LAC
		{
			get
			{
				return this._LAC;
			}
			set
			{
				if ((this._LAC != value))
				{
					this.OnLACChanging(value);
					this.SendPropertyChanging();
					this._LAC = value;
					this.SendPropertyChanged("LAC");
					this.OnLACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MCC
		{
			get
			{
				return this._MCC;
			}
			set
			{
				if ((this._MCC != value))
				{
					this.OnMCCChanging(value);
					this.SendPropertyChanging();
					this._MCC = value;
					this.SendPropertyChanged("MCC");
					this.OnMCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MNC", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MNC
		{
			get
			{
				return this._MNC;
			}
			set
			{
				if ((this._MNC != value))
				{
					this.OnMNCChanging(value);
					this.SendPropertyChanging();
					this._MNC = value;
					this.SendPropertyChanged("MNC");
					this.OnMNCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="Int NOT NULL")]
		public int Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					if (this._caProviders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caProviders_maCells", Storage="_caProviders", ThisKey="Provider", OtherKey="id", IsForeignKey=true)]
		public caProviders caProviders
		{
			get
			{
				return this._caProviders.Entity;
			}
			set
			{
				caProviders previousValue = this._caProviders.Entity;
				if (((previousValue != value) 
							|| (this._caProviders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._caProviders.Entity = null;
						previousValue.maCells.Remove(this);
					}
					this._caProviders.Entity = value;
					if ((value != null))
					{
						value.maCells.Add(this);
						this._Provider = value.id;
					}
					else
					{
						this._Provider = default(int);
					}
					this.SendPropertyChanged("caProviders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.maDecryptedTraffic")]
	public partial class maDecryptedTraffic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Name;
		
		private System.DateTime _Time;
		
		private string _From;
		
		private string _To;
		
		private string _ARFCN;
		
		private int _Provider;
		
		private System.Data.Linq.Binary _Context;
		
		private System.DateTime _fIns;
		
		private EntityRef<caProviders> _caProviders;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    partial void OnARFCNChanging(string value);
    partial void OnARFCNChanged();
    partial void OnProviderChanging(int value);
    partial void OnProviderChanged();
    partial void OnContextChanging(System.Data.Linq.Binary value);
    partial void OnContextChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    #endregion
		
		public maDecryptedTraffic()
		{
			this._caProviders = default(EntityRef<caProviders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[From]", Storage="_From", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string From
		{
			get
			{
				return this._From;
			}
			set
			{
				if ((this._From != value))
				{
					this.OnFromChanging(value);
					this.SendPropertyChanging();
					this._From = value;
					this.SendPropertyChanged("From");
					this.OnFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string To
		{
			get
			{
				return this._To;
			}
			set
			{
				if ((this._To != value))
				{
					this.OnToChanging(value);
					this.SendPropertyChanging();
					this._To = value;
					this.SendPropertyChanged("To");
					this.OnToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARFCN", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ARFCN
		{
			get
			{
				return this._ARFCN;
			}
			set
			{
				if ((this._ARFCN != value))
				{
					this.OnARFCNChanging(value);
					this.SendPropertyChanging();
					this._ARFCN = value;
					this.SendPropertyChanged("ARFCN");
					this.OnARFCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="Int NOT NULL")]
		public int Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					if (this._caProviders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Context", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Context
		{
			get
			{
				return this._Context;
			}
			set
			{
				if ((this._Context != value))
				{
					this.OnContextChanging(value);
					this.SendPropertyChanging();
					this._Context = value;
					this.SendPropertyChanged("Context");
					this.OnContextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caProviders_maDecryptedTraffic", Storage="_caProviders", ThisKey="Provider", OtherKey="id", IsForeignKey=true)]
		public caProviders caProviders
		{
			get
			{
				return this._caProviders.Entity;
			}
			set
			{
				caProviders previousValue = this._caProviders.Entity;
				if (((previousValue != value) 
							|| (this._caProviders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._caProviders.Entity = null;
						previousValue.maDecryptedTraffic.Remove(this);
					}
					this._caProviders.Entity = value;
					if ((value != null))
					{
						value.maDecryptedTraffic.Add(this);
						this._Provider = value.id;
					}
					else
					{
						this._Provider = default(int);
					}
					this.SendPropertyChanged("caProviders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.maTMSICatcher")]
	public partial class maTMSICatcher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Data.Linq.Binary _Identity;
		
		private System.Data.Linq.Binary _RxLevel;
		
		private System.Data.Linq.Binary _ARFCN;
		
		private int _Provider;
		
		private System.Data.Linq.Binary _LastAction;
		
		private bool _Activ;
		
		private System.DateTime _Time;
		
		private System.DateTime _fIns;
		
		private EntityRef<caProviders> _caProviders;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnIdentityChanging(System.Data.Linq.Binary value);
    partial void OnIdentityChanged();
    partial void OnRxLevelChanging(System.Data.Linq.Binary value);
    partial void OnRxLevelChanged();
    partial void OnARFCNChanging(System.Data.Linq.Binary value);
    partial void OnARFCNChanged();
    partial void OnProviderChanging(int value);
    partial void OnProviderChanged();
    partial void OnLastActionChanging(System.Data.Linq.Binary value);
    partial void OnLastActionChanged();
    partial void OnActivChanging(bool value);
    partial void OnActivChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    #endregion
		
		public maTMSICatcher()
		{
			this._caProviders = default(EntityRef<caProviders>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this.OnIdentityChanging(value);
					this.SendPropertyChanging();
					this._Identity = value;
					this.SendPropertyChanged("Identity");
					this.OnIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RxLevel", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RxLevel
		{
			get
			{
				return this._RxLevel;
			}
			set
			{
				if ((this._RxLevel != value))
				{
					this.OnRxLevelChanging(value);
					this.SendPropertyChanging();
					this._RxLevel = value;
					this.SendPropertyChanged("RxLevel");
					this.OnRxLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ARFCN", DbType="VarBinary(50) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ARFCN
		{
			get
			{
				return this._ARFCN;
			}
			set
			{
				if ((this._ARFCN != value))
				{
					this.OnARFCNChanging(value);
					this.SendPropertyChanging();
					this._ARFCN = value;
					this.SendPropertyChanged("ARFCN");
					this.OnARFCNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provider", DbType="Int NOT NULL")]
		public int Provider
		{
			get
			{
				return this._Provider;
			}
			set
			{
				if ((this._Provider != value))
				{
					if (this._caProviders.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProviderChanging(value);
					this.SendPropertyChanging();
					this._Provider = value;
					this.SendPropertyChanged("Provider");
					this.OnProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAction", DbType="VarBinary(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary LastAction
		{
			get
			{
				return this._LastAction;
			}
			set
			{
				if ((this._LastAction != value))
				{
					this.OnLastActionChanging(value);
					this.SendPropertyChanging();
					this._LastAction = value;
					this.SendPropertyChanged("LastAction");
					this.OnLastActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activ", DbType="Bit NOT NULL")]
		public bool Activ
		{
			get
			{
				return this._Activ;
			}
			set
			{
				if ((this._Activ != value))
				{
					this.OnActivChanging(value);
					this.SendPropertyChanging();
					this._Activ = value;
					this.SendPropertyChanged("Activ");
					this.OnActivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caProviders_maTMSICatcher", Storage="_caProviders", ThisKey="Provider", OtherKey="id", IsForeignKey=true)]
		public caProviders caProviders
		{
			get
			{
				return this._caProviders.Entity;
			}
			set
			{
				caProviders previousValue = this._caProviders.Entity;
				if (((previousValue != value) 
							|| (this._caProviders.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._caProviders.Entity = null;
						previousValue.maTMSICatcher.Remove(this);
					}
					this._caProviders.Entity = value;
					if ((value != null))
					{
						value.maTMSICatcher.Add(this);
						this._Provider = value.id;
					}
					else
					{
						this._Provider = default(int);
					}
					this.SendPropertyChanged("caProviders");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.reCommandsParameters")]
	public partial class reCommandsParameters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tag;
		
		private int _idCommand;
		
		private System.Nullable<int> _idParameter;
		
		private System.DateTime _fIns;
		
		private System.Nullable<System.DateTime> _fAct;
		
		private EntityRef<caCommands> _caCommands;
		
		private EntityRef<caParameters> _caParameters;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntagChanging(string value);
    partial void OntagChanged();
    partial void OnidCommandChanging(int value);
    partial void OnidCommandChanged();
    partial void OnidParameterChanging(System.Nullable<int> value);
    partial void OnidParameterChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    partial void OnfActChanging(System.Nullable<System.DateTime> value);
    partial void OnfActChanged();
    #endregion
		
		public reCommandsParameters()
		{
			this._caCommands = default(EntityRef<caCommands>);
			this._caParameters = default(EntityRef<caParameters>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCommand", DbType="Int NOT NULL")]
		public int idCommand
		{
			get
			{
				return this._idCommand;
			}
			set
			{
				if ((this._idCommand != value))
				{
					if (this._caCommands.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCommandChanging(value);
					this.SendPropertyChanging();
					this._idCommand = value;
					this.SendPropertyChanged("idCommand");
					this.OnidCommandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idParameter", DbType="Int")]
		public System.Nullable<int> idParameter
		{
			get
			{
				return this._idParameter;
			}
			set
			{
				if ((this._idParameter != value))
				{
					if (this._caParameters.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidParameterChanging(value);
					this.SendPropertyChanging();
					this._idParameter = value;
					this.SendPropertyChanged("idParameter");
					this.OnidParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fAct", DbType="DateTime")]
		public System.Nullable<System.DateTime> fAct
		{
			get
			{
				return this._fAct;
			}
			set
			{
				if ((this._fAct != value))
				{
					this.OnfActChanging(value);
					this.SendPropertyChanging();
					this._fAct = value;
					this.SendPropertyChanged("fAct");
					this.OnfActChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caCommands_reCommandsParameters", Storage="_caCommands", ThisKey="idCommand", OtherKey="id", IsForeignKey=true)]
		public caCommands caCommands
		{
			get
			{
				return this._caCommands.Entity;
			}
			set
			{
				caCommands previousValue = this._caCommands.Entity;
				if (((previousValue != value) 
							|| (this._caCommands.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._caCommands.Entity = null;
						previousValue.reCommandsParameters.Remove(this);
					}
					this._caCommands.Entity = value;
					if ((value != null))
					{
						value.reCommandsParameters.Add(this);
						this._idCommand = value.id;
					}
					else
					{
						this._idCommand = default(int);
					}
					this.SendPropertyChanged("caCommands");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="caParameters_reCommandsParameters", Storage="_caParameters", ThisKey="idParameter", OtherKey="id", IsForeignKey=true)]
		public caParameters caParameters
		{
			get
			{
				return this._caParameters.Entity;
			}
			set
			{
				caParameters previousValue = this._caParameters.Entity;
				if (((previousValue != value) 
							|| (this._caParameters.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._caParameters.Entity = null;
						previousValue.reCommandsParameters.Remove(this);
					}
					this._caParameters.Entity = value;
					if ((value != null))
					{
						value.reCommandsParameters.Add(this);
						this._idParameter = value.id;
					}
					else
					{
						this._idParameter = default(Nullable<int>);
					}
					this.SendPropertyChanged("caParameters");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.taParameters")]
	public partial class taParameters : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _tag;
		
		private string _des;
		
		private string _value;
		
		private System.DateTime _fIns;
		
		private System.Nullable<System.DateTime> _fAct;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntagChanging(string value);
    partial void OntagChanged();
    partial void OndesChanging(string value);
    partial void OndesChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnfInsChanging(System.DateTime value);
    partial void OnfInsChanged();
    partial void OnfActChanging(System.Nullable<System.DateTime> value);
    partial void OnfActChanged();
    #endregion
		
		public taParameters()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tag", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if ((this._tag != value))
				{
					this.OntagChanging(value);
					this.SendPropertyChanging();
					this._tag = value;
					this.SendPropertyChanged("tag");
					this.OntagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_des", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string des
		{
			get
			{
				return this._des;
			}
			set
			{
				if ((this._des != value))
				{
					this.OndesChanging(value);
					this.SendPropertyChanging();
					this._des = value;
					this.SendPropertyChanged("des");
					this.OndesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fIns", DbType="DateTime NOT NULL", IsDbGenerated=true)]
		public System.DateTime fIns
		{
			get
			{
				return this._fIns;
			}
			set
			{
				if ((this._fIns != value))
				{
					this.OnfInsChanging(value);
					this.SendPropertyChanging();
					this._fIns = value;
					this.SendPropertyChanged("fIns");
					this.OnfInsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fAct", DbType="DateTime")]
		public System.Nullable<System.DateTime> fAct
		{
			get
			{
				return this._fAct;
			}
			set
			{
				if ((this._fAct != value))
				{
					this.OnfActChanging(value);
					this.SendPropertyChanging();
					this._fAct = value;
					this.SendPropertyChanged("fAct");
					this.OnfActChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class SPNlogErrorsRegistredInIntervalResult
	{
		
		private System.Nullable<int> _COUNT;
		
		public SPNlogErrorsRegistredInIntervalResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT", DbType="Int")]
		public System.Nullable<int> COUNT
		{
			get
			{
				return this._COUNT;
			}
			set
			{
				if ((this._COUNT != value))
				{
					this._COUNT = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
